@layout BlankLayout 
@using Microsoft.Extensions.Configuration
@using MySqlConnector
@using Clases
@inject LoginState loginState
@inject Microsoft.Extensions.Configuration.IConfiguration config
@inject NavigationManager NavManager
@page "/Login"


<div class="container">
    <div class="row">
        <div class="col-sm-4 mb-3">
            <br />
            <br />
            <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e6/Maersk_Group_Logo.svg/1280px-Maersk_Group_Logo.svg.png" class="img-fluid" width="500" height="400">
            <br />
            <br />
        </div>
        <div class="col-sm-8 mb-3">
            <br />
            <br />
            <br />
            <div class="d-flex p-3 bd-highlight bg-tertiary"></div>
        </div>
    </div>
    <EditForm Model=@login>
        <div class="container">
            <div class="form-group">
                <h4 for="usuario">Código de empleado</h4>
                <InputText @bind-Value="login.Usuario" class="form-control" id="usuario" />
            </div>
            <div class="form-group">
                <h4 for="contraseña">Contraseña</h4>
                <InputText @bind-Value="login.Contraseña" class="form-control" id="contraseña" type="password" />
            </div>
            @if (login.Error is not null && login.Error != "")
            {
                <div class="form-group text-center text-white bg-danger Error">
                    <label>@login.Error</label>
                </div>
            }
            <div class="col-10 mb-3">
                <center>
                    <button class="btn btn-secondary text-dark btn-lg" @onclick="ingresar" role="button">Ingresar</button>
                </center>
            </div>
        </div>
    </EditForm>
</div>

@code
{
    //guardar los datos de la clase DataLogin
    private DataLogIn login = new DataLogIn();

    public void ingresar()
    {
        String connString = config.GetConnectionString("MySqlNaviera");

        loginState.SetLogin(true, login.Usuario); //función en la que se asignan los valores
        lee_usuarios(login.Usuario, login.Contraseña); //comprueba la contraseña y usuario ingresados
        if (login.Error == "")
        {
            if (loginState.EsAdministrador)
            {
                NavManager.NavigateTo("/Personal");
            }
            else
            {
                NavManager.NavigateTo("/");
            }
        }
    }

    public void lee_usuarios(String usuario, String contraseña)
    {

        loginState.nombre = "";
        loginState.codigo = "";
        loginState.IsLoggedIn = false;
        loginState.EsAdministrador = false;
        login.Error = "";

        String connString = config.GetConnectionString("MySqlNaviera");
        using var connection = new MySqlConnection(connString);
        {
            connection.Open();

            string q = "";

            if (login.Usuario == "" || login.Contraseña == "")
            {
                login.Error = "Usuario o contraseña inválidos";
            }
            else
            {
                q = "SELECT * FROM usuarios";
                q = q + " where codigo_empleado ='" + login.Usuario + "' ";
                q = q + "and contraseña ='" + login.Contraseña + "'";

                using var command = new MySqlCommand(q, connection);
                using var reader = command.ExecuteReader();
                if (reader.Read())
                {
                    loginState.nombre = reader["Nombre"].ToString();
                    loginState.codigo = reader["Codigo_empleado"].ToString();
                    loginState.IsLoggedIn = true;
                    if (reader["tipo_empleado"].ToString() == "Administrador")
                    {
                        loginState.EsAdministrador = true;
                    }
                    else
                    {
                        loginState.EsAdministrador = false;
                    }
                }
                else
                {
                    login.Error = "Usuario o contraseña inválidos";
                }
            }

        }
    }
}
