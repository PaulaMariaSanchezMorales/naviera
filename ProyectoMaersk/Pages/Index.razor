@using Microsoft.Extensions.Configuration
@using MySqlConnector
@using Clases
@inject LoginState loginState
@inject Microsoft.Extensions.Configuration.IConfiguration config
@inject NavigationManager NavManager
@page "/"

@if (loginState.IsLoggedIn)
{
    // Si esta Loggeado
    <h1>Reservas</h1>

    <h4>Listado de reservas</h4>

    <div class="row">
        <div class="col-sm-10 mb-3">
            <a class="btn btn-secondary text-dark" href="ReservasEditar" role="button">Agregar</a>
        </div>
        <div class="col-sm-2 mb-3">
            <EditForm Model="@busqueda" class="form-inline">
                <div class="form-group">
                    <button class="btn btn-secondary" @onclick="() => buscar(busqueda.Texto)" role="button">
                        <i class="oi oi-magnifying-glass text-dark"></i>
                    </button>
                    <InputText id="textobuscar" @bind-Value="busqueda.Texto" class="form-control" placeholder="Buscar" />
                </div><!--bind value para que realice la función con el texto que el usuario ingresó-->
            </EditForm>
        </div>
    </div>
    <table class="table table-sm">
        <thead>
            <tr class="bg-primary">
                <!--Agregué un ID-->
                <th>Codigo</th>
                <th>Empresa</th>
                <th>Número Tributario</th>
                <th>Direccion</th>
                <th>Puerto Origen</th>
                <th>Pais Origen</th>
                <th>Hora de salida</th>
                <th>Puerto Destino</th>
                <th>Pais Destino</th>
                <th>Hora de llegada</th>
                <th>Receptor de la carga</th>
                <th>Contraseña de Recepcion</th>
                <th>Tipo de Carga</th>
                <th>Descripcion de la Carga</th>
                <th>Peso</th>
                <th>Valor</th>
                <th>Tipo Contenedor</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reserva in reservas)
            {
                <tr>
                    <!--Agregué un ID que en la parte gráfica está oculto porque el código de contenedor que parecía ser la llave primaria no iba a ser única, por lo que el ID es un valor único autogenerado por la base de datos-->
                    <td>@reserva.Codigo</td><!--valor autogenerado por la base de datos, con los requerimientos solicitados-->
                    <td>@reserva.Empresa</td>
                    <td>@reserva.Nit</td>
                    <td>@reserva.Direccion</td>
                    <td>@reserva.Nombre_Puerto_Origen</td>
                    <td>@reserva.Pais_Origen</td>
                    <td>@reserva.Hora_Salida</td>
                    <td>@reserva.Nombre_Puerto_Destino</td>
                    <td>@reserva.Pais_Destino</td>
                    <td>@reserva.Hora_Llegada</td>
                    <td>@reserva.Receptor</td>
                    <td>@reserva.Contraseña_Recepcion</td> <!--valor autogenerado por la base de datos-->
                    <td>@reserva.Tipo_Carga</td>
                    <td>@reserva.Descripcion</td>
                    <td>@reserva.Peso</td>
                    <td>@reserva.Valor</td>
                    <td>@reserva.Tipo_Contenedor</td>
                    <!--botón para descarga de reporte individual-->
                    <td>
                        <div class="row">
                            <div class="col-12 text-center">
                                <a href="ListaReservasIndividual?Id=@reserva.Id" target="_blank" class="btn btn-secondary text-dark" role="button">
                                    <!--link pintado como botón para que dirija hacia ListaReservas-->
                                    <!--?Id enviando parámetro de id a ListaReservasIndividual-->
                                    <i class="oi oi-data-transfer-download text-dark"></i>
                                </a>
                            </div>
                        </div>
                    </td>
                    <!--botón para descarga de factura individual-->
                    <td>
                        <div class="row">
                            <div class="col-12 text-center">
                                <a href="Facturas?Id=@reserva.Id" target="_blank" class="btn btn-secondary text-dark" role="button">
                                    <!--link pintado como botón para que dirija hacia ListaReservas-->
                                    <!--?Id enviando parámetro de id a ListaReservasIndividual-->
                                    <i class="oi oi-document text-dark"></i>
                                </a>
                            </div>
                        </div>
                    </td>
                    <!--botón para edición-->
                    <td>
                        <a class="btn btn-secondary text-dark" href="ReservasEditar?Id=@reserva.Id" role="button">
                            <i class="oi oi-pencil text-dark"></i>
                        </a>
                    </td>
                    <!--botón para eliminar-->
                    <td>
                        <button class="btn btn-secondary" @onclick="() => borrar(reserva.Id)" role="button">
                            <i class="oi oi-trash text-dark"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="row">
        <div class="col-12 text-center">
            <a href="ListaReservas" target="_blank" class="btn btn-secondary btn-lg text-dark" role="button">
                <!--link pintado como botón para que dirija hacia ListaReservas-->
                <i class="oi oi-print text-dark"></i>
                Imprimir reporte de Reservas general
            </a>
        </div>
    </div>
}
else
{ 
    // No esta Loggeado
    <div class="row">
        <div class="col-12 text-center">
            <div style="font-size: 64px;">NAVIERA MAERKS LINE</div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 m-0 p-0 text-center">
            <img src="/barco.jpg" style="width:100%;">
        </div>
    </div>
}
   
@code
{
    private List<Reserva> reservas = new List<Reserva>();
    Busqueda busqueda = new Busqueda();

    public void lee_reservas(string Texto)
    {
        reservas.Clear();
        String connString = config.GetConnectionString("MySqlNaviera");
        using var connection = new MySqlConnection(connString);
        {
            connection.Open();

            string q = "SELECT * FROM reserva_contenedor"; //selección de lo que q vaya a devolver
            if (Texto != "")
            {
                q = q + " where codigo_contenedor ='" + Texto + "' ";
                q = q + "or empresa ='" + Texto + "' ";
                q = q + "or nit ='" + Texto + "' ";
                q = q + "or direccion ='" + Texto + "' ";
                q = q + "or puerto_origen ='" + Texto + "' ";
                q = q + "or pais_origen ='" + Texto + "' ";
                q = q + "or puerto_destino ='" + Texto + "' ";
                q = q + "or pais_destino ='" + Texto + "' ";
                q = q + "or receptor ='" + Texto + "' ";
                q = q + "or contraseña_recepcion ='" + Texto + "' ";
                q = q + "or tipo_carga ='" + Texto + "' ";
                q = q + "or descripcion_carga ='" + Texto + "' ";
                q = q + "or peso_carga ='" + Texto + "' ";
                q = q + "or valor_carga ='" + Texto + "' ";
                q = q + "or tipo_contenedor ='" + Texto + "'";
            }

            using var command = new MySqlCommand(q, connection);
            using var reader = command.ExecuteReader(); //devuelve un objeto para poder hacer consultas, en este caso q
            while (reader.Read())
            {
                var reserva = new Reserva();
                reserva.Id = (int)reader["id"];
                reserva.Codigo = reader["Codigo_contenedor"].ToString();
                reserva.Empresa = reader["Empresa"].ToString();
                reserva.Nit = reader["Nit"].ToString();
                reserva.Direccion = reader["Direccion"].ToString();
                reserva.Puerto_Origen = reader["Puerto_Origen"].ToString();
                reserva.Pais_Origen = reader["Pais_Origen"].ToString();
                reserva.Hora_Salida = ((DateTime)reader["Hora_Salida"]).ToString("dd/MM/yyyy hh:mm tt"); //convierte lo que la base de datos trae a tipo DateTime de C# y le aplica el formato
                reserva.Puerto_Destino = reader["Puerto_Destino"].ToString();
                reserva.Pais_Destino = reader["Pais_Destino"].ToString();
                reserva.Hora_Llegada = ((DateTime)reader["Hora_Llegada"]).ToString("dd/MM/yyyy hh:mm tt");
                reserva.Receptor = reader["Receptor"].ToString();
                reserva.Contraseña_Recepcion = reader["Contraseña_Recepcion"].ToString();
                reserva.Tipo_Carga = reader["Tipo_Carga"].ToString();
                reserva.Descripcion = reader["Descripcion_carga"].ToString();
                reserva.Peso = reader["Peso_carga"].ToString();
                reserva.Valor = reader["Valor_carga"].ToString();
                reserva.Tipo_Contenedor = reader["Tipo_Contenedor"].ToString();

                //para que aparezca el nombre del puerto y no el código
                using var connectionPO = new MySqlConnection(connString);
                {
                    connectionPO.Open();

                    string qPO = "SELECT * FROM puertos where codigo = '" + reserva.Puerto_Origen + "'";
                    using var commandPO = new MySqlCommand(qPO, connectionPO);
                    using var readerPO = commandPO.ExecuteReader(); //devuelve un objeto para poder hacer consultas, en este caso q
                    if (readerPO.Read())
                    {
                        reserva.Nombre_Puerto_Origen = readerPO["nombre"].ToString();
                    }
                }

                using var connectionPD = new MySqlConnection(connString);
                {
                    connectionPD.Open();

                    string qPD = "SELECT * FROM puertos where codigo = '" + reserva.Puerto_Destino + "'";
                    using var commandPD = new MySqlCommand(qPD, connectionPD);
                    using var readerPD = commandPD.ExecuteReader(); //devuelve un objeto para poder hacer consultas, en este caso q
                    if (readerPD.Read())
                    {
                        reserva.Nombre_Puerto_Destino = readerPD["nombre"].ToString();
                    }
                }
                reservas.Add(reserva);
            }
        }
    }

    protected override void OnInitialized() //inicializando la lectura de los datos
    {
        lee_reservas("");
    }
    //funciones
    private void borrar(int id)
    {
        String connString = config.GetConnectionString("MySqlNaviera");
        {
            using var connection = new MySqlConnection(connString);
            {
                connection.Open(); //abriendo la conección a la base de datos, si xampp no está abierto no funciona
                String q = "Delete from reserva_contenedor where id = '" + id + "'";

                using var command = new MySqlCommand(q, connection);
                var resultado = command.ExecuteNonQuery(); //resultado de las filas afectadas por update, insert y delete
            }
        }
        NavManager.NavigateTo("/", true); //dirige de nuevo a la página principal (reservas)
    }

    private void buscar(string Texto)
    {
        lee_reservas(Texto);
        NavManager.NavigateTo("/");
    }
}
