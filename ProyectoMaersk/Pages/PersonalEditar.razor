@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Configuration
@using MySqlConnector
@using Clases
@inject LoginState loginState //para poder usar el loginState
@inject Microsoft.Extensions.Configuration.IConfiguration config    
@inject NavigationManager NavManager

@page "/PersonalEditar"

@if (loginState.EsAdministrador)
{
    <h1>Personal</h1>

    <p>Modificar personal</p>

    <div class="container">
        <EditForm Model=@usuario OnValidSubmit="@grabar">
            <DataAnnotationsValidator /> <!--acá es donde se valida que los datos sean correctos, muestra los cuadritos en rojo, valida los espacios vacíos y datos incorrectos con respecto al tipo que se le asignó en la base de datos-->
            <div class="form-group">
                <label for="tipoempleado">Tipo de empleado</label>
                <InputSelect @bind-Value="usuario.Tipo" class="form-control" id="tipoempleado">
                    <option value="">Elegir...</option>
                    @foreach (var tipo_empleado in Tipo_empleados)
                        {
                        <option value="@tipo_empleado.Nombre">@tipo_empleado.Nombre</option>
                        }
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="nombre">Nombre</label>
                <InputText @bind-Value="usuario.Nombre" class="form-control" id="nombre" />
            </div>
            <div class="form-group">
                <label for="contraseña">Contraseña</label>
                <InputText @bind-Value="usuario.Contraseña" class="form-control" id="contraseña" />
            </div>
            <div class="form-group">
                <label for="codigo">Código de empleado</label>
                <!--generar el código de empleado, verificando el Id-->
                @if (usuario.Id > 0)
                {
                    <InputText @bind-Value="usuario.Codigo" readonly class="form-control" id="codigo" />
                }
                else
                {
                    <InputText @bind-Value="usuario.Codigo" readonly class="form-control" id="codigo" />
                }
            </div>
            <div class="form-group">
                <label for="pais">Pais</label>
                <InputSelect @bind-Value="usuario.Pais" class="form-control" id="pais" @oninput="Llena_Puertos_Evento">
                    <option value="">Elegir...</option>
                    @foreach (var pais in Paises)
                        {
                        <option value="@pais.Codigo">@pais.Nombre</option>
                        }
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="puerto">Puerto</label>
                <InputSelect @bind-Value="usuario.Puerto" class="form-control" id="puerto">
                    <option value="">Elegir...</option>
                    @foreach (var puerto in Puertos)
                        {
                        <option value="@puerto.Codigo">@puerto.Nombre</option>
                        }
                </InputSelect>
            </div>
            <input type="submit" class="btn btn-primary text-dark" value="Enviar" />
        </EditForm>
    </div>
}

@code
{
    int Id = 0;
    Usuarios usuario = new Usuarios();

    List<Tipo_empleado> Tipo_empleados = new List<Tipo_empleado>();
    List<Pais> Paises = new List<Pais>();
    List<Puerto> Puertos = new List<Puerto>();

    //para que el puerto que elija dependa del país que ya se eligió
    void LlenaPuertos(String Pais)
    {
        //puertos
        Puertos.Clear();
        String connString = config.GetConnectionString("MySqlNaviera"); //variable de conexión a la base
        using var connectionPuertos = new MySqlConnection(connString);
        {
            //tipo de empleado
            connectionPuertos.Open(); //apertura de la base

            using var commandPuertos = new MySqlCommand("SELECT * FROM puertos where pais = '" + Pais + "'", connectionPuertos);
            {
                using var readerPuertos = commandPuertos.ExecuteReader();
                {
                    while (readerPuertos.Read())
                    {
                        var puerto = new Puerto();
                        puerto.Codigo = readerPuertos["codigo"].ToString();
                        puerto.Nombre = readerPuertos["nombre"].ToString();
                        Puertos.Add(puerto);
                    }
                }
            }
        }
    }
    void Llena_Puertos_Evento(ChangeEventArgs e)
    {
        // Recibe como parametro el dato que cambio en e.value
        String Pais = e.Value.ToString();
        usuario.Puerto = "";
        LlenaPuertos(Pais);
    }

    void Llena_Combos() //no regresa ningún resultado void (lista de todos lo países)
    {
        String connString = config.GetConnectionString("MySqlNaviera");
        using var connection = new MySqlConnection(connString);
        {
            //tipo de empleado
            connection.Open();
            using var command1 = new MySqlCommand("SELECT * FROM tipo_empleado;", connection);
            {
                using var reader1 = command1.ExecuteReader();
                {
                    while (reader1.Read())
                    {
                        var empleado = new Tipo_empleado();
                        empleado.Nombre = reader1["nombre"].ToString();
                        Tipo_empleados.Add(empleado);
                    }
                }
            }

            //paises
            using var command2 = new MySqlCommand("SELECT * FROM paises;", connection);
            {
                using var reader2 = command2.ExecuteReader();
                {
                    while (reader2.Read())
                    {
                        var pais = new Pais();
                        pais.Codigo = reader2["codigo"].ToString();
                        pais.Nombre = reader2["nombre"].ToString();
                        Paises.Add(pais);
                    }
                }
            }
        }
    }

    void grabar()
    {
        String connString = config.GetConnectionString("MySqlNaviera");
        using var connection = new MySqlConnection(connString);
        {
            String q = "";

            connection.Open();
            if (usuario.Id > 0)
            {
                q = q + "UPDATE usuarios SET ";
                q = q + "nombre = '" + usuario.Nombre + "',";
                q = q + "tipo_empleado = '" + usuario.Tipo + "',";
                q = q + " puerto = '" + usuario.Puerto + "',";
                q = q + " pais = '" + usuario.Pais + "'";

                q = q + " where id = '" + usuario.Id + "'";
            }
            else
            {
                usuario.Codigo = Guid.NewGuid().ToString("N").Substring(0, 6); //generar numeros random, es una funcion ya por los sistemas para generar un id unico

                q = q + "INSERT INTO usuarios(tipo_empleado, contraseña, codigo_empleado, nombre, puerto, pais)" +
                    "values ('" + usuario.Tipo + "','" + usuario.Contraseña + "','" + usuario.Codigo + "','" + usuario.Nombre + "','" + usuario.Puerto + "','" + usuario.Pais + "')";
            }
            using var command = new MySqlCommand(q, connection);
            var resultado = command.ExecuteNonQuery();
        }

        NavManager.NavigateTo("/Personal");
    }

    //verificación de todos los datos ingresados por el usuario que serán grabados en la base de datos
    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("Id", out var param))
        {
            String parametro = param.First();
            if (parametro != null)
            {
                Int32.TryParse(parametro, out Id);
            }
        }

        Llena_Combos();

        String connString = config.GetConnectionString("MySqlNaviera");
        using var connection = new MySqlConnection(connString);
        {
            connection.Open();
            String q = "SELECT * FROM usuarios where id = '" + Id + "';";
            using var command = new MySqlCommand(q, connection);
            using var reader = command.ExecuteReader();
            while (reader.Read())
            {
                usuario.Id = (int)reader["id"];
                usuario.Tipo = reader["tipo_empleado"].ToString();
                usuario.Contraseña = reader["contraseña"].ToString();
                usuario.Codigo = reader["codigo_empleado"].ToString();
                usuario.Nombre = reader["nombre"].ToString();
                usuario.Puerto = reader["puerto"].ToString();
                usuario.Pais = reader["pais"].ToString();
                LlenaPuertos(usuario.Pais);
            }
        }
    }
}
